/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package omfbreports;

import java.awt.Cursor;
import java.awt.Font;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Emmanuel Ikpe
 */
public class GLACC extends javax.swing.JFrame {

    /**
     * Creates new form GLACC
     */
    public GLACC() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextFieldAcc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxGLcode = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jProgressBarLoad = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaSched = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GENERAL LEDGER STATEMENT");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));
        jPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel2FocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.orange, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.pink));

        jDateChooser1.setDateFormatString("dd/MM/yyyy");
        jDateChooser1.setDoubleBuffered(false);

        jDateChooser2.setDateFormatString("dd/MM/yyyy");

        jLabel1.setText("Date From");

        jLabel2.setText("Date To");

        jLabel3.setText("Branch");

        jLabel4.setText("General ledger Number");

        jTextField1.setEditable(false);
        jTextField1.setText("Ohafia");

        jTextFieldAcc.setText("1");

        jLabel5.setText("Account Number");

        jComboBoxGLcode.setMaximumSize(new java.awt.Dimension(300, 300));
        jComboBoxGLcode.setPreferredSize(new java.awt.Dimension(300, 300));
        jComboBoxGLcode.setPrototypeDisplayValue("short");

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Load");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(49, 49, 49)
                                .addComponent(jTextFieldAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(23, 23, 23)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxGLcode, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel2)))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxGLcode, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextAreaSched.setEditable(false);
        jTextAreaSched.setColumns(20);
        jTextAreaSched.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTextAreaSched.setRows(5);
        jScrollPane1.setViewportView(jTextAreaSched);

        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabelStatus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelStatus.setForeground(new java.awt.Color(153, 0, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(59, 59, 59)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jProgressBarLoad, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(77, 77, 77)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBarLoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         //get openning Balances:
         String PRO="";
 String Glcode=jComboBoxGLcode.getSelectedItem().toString().substring(0,6);
//BigDecimal LastYrOpenBal=BigDecimal.ZERO;
BigDecimal OpeningBal=BigDecimal.ZERO;
 //try to correct GLcode 200104
 if(Glcode.equalsIgnoreCase("200104")){
     JOptionPane.showMessageDialog(rootPane,Glcode);
    PRO=" and trx_code='PRO' "; 
 }
// jProgressBarLoad.setVisible(true);
        
        
         // LastYrOpenBal=openbal(Glcode);   
    
        // JOptionPane.showMessageDialog(rootPane,Glcode);
         String Heading="",Gap;
         if(jComboBoxGLcode.getSelectedItem().toString().contains("CASHIER TELLER")||jComboBoxGLcode.getSelectedItem().toString().contains("ATM TELLER")){
             Gap="\t \t \t \t \t \t \t  ";
             Heading="Trx no."+String.format("%35s","  Name/text")+String.format("%30s","Voucher")+String.format("%15s","Trx Code")+String.format("%20s","Trx Date")+String.format("%20s","Session Date")+String.format("%15s","Debit")+String.format("%20s","Credit")+String.format("%30s","Balance");
         }else{
         Heading="Trx no."+String.format("%35s","  Name/text")+String.format("%30s","Voucher")+String.format("%30s","Trx Code")+String.format("%20s","Trx Date")+String.format("%20s","Session Date")+String.format("%15s","Debit")+String.format("%20s","Credit")+String.format("%30s","Balance");
             Gap="\t \t \t \t \t \t \t \t";
         }
        
        conn=glob.getConnect();
        
        //getting Date
        String dd=jDateChooser1.getDate().toString();
        String m="";
        if(dd.contains("Jan")){m="01";}
        else if(dd.contains("Feb")){m="02";}
         else if(dd.contains("Mar")){m="03";}
         else if(dd.contains("Apr")){m="04";}
         else if(dd.contains("May")){m="05";}
         else if(dd.contains("Jun")){m="06";}
        else if(dd.contains("Jul")){m="07";}
        else if(dd.contains("Aug")){m="08";}
        else if(dd.contains("Sep")){m="09";}
        else if(dd.contains("Oct")){m="10";}
        else if(dd.contains("Nov")){m="11";}
        else if(dd.contains("Dec")){m="12";}
String dtt= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);
String Cyear=dd.substring(dd.length()-4);
String Cday=dd.substring(8,10);
String Cmonth=m;
if(dtt.length()<10){dtt=dtt.substring(0,5)+"0"+dtt.substring(5);};// to take care of 01/03/2018
//getting second date
 dd=jDateChooser2.getDate().toString();
        String m2="";
        if(dd.contains("Jan")){m2="01";}
        else if(dd.contains("Feb")){m2="02";}
         else if(dd.contains("Mar")){m2="03";}
         else if(dd.contains("Apr")){m2="04";}
         else if(dd.contains("May")){m2="05";}
         else if(dd.contains("Jun")){m2="06";}
        else if(dd.contains("Jul")){m2="07";}
        else if(dd.contains("Aug")){m2="08";}
        else if(dd.contains("Sep")){m2="09";}
        else if(dd.contains("Oct")){m2="10";}
        else if(dd.contains("Nov")){m2="11";}
        else if(dd.contains("Dec")){m2="12";}
String dtt2= dd.substring(dd.length()-4)+"-"+m2+"-"+dd.substring(8,10);

if(dtt2.length()<10){dtt=dtt2.substring(0,5)+"0"+dtt2.substring(5);};// to take care of 01/03/2018

         double bal=0.00,Drbal=0.00,Crbal=0.00;
            String query,line,OpenBalS,RecNoList="1";
            BigDecimal OpenBal;
            line="___________________________________________________________________________________________________________________________________________________________________________";
           //String FilterQuery="select rec_no from trx_text" +
//" where ses_date>='"+dtt+" 00:00:00.000' and trx_no in (select trx_no from memtrans" +
//" where batch_date between '"+dtt+" 00:00:00.000' and '"+dtt2+" 00:00:00.000' and gl_no='"+jComboBoxGLcode.getSelectedItem().toString().substring(0,6)+"' and ac_no="+jTextFieldAcc.getText()+")";
 String BBF=   "select  SUM(amount) Amt from memtrans " +
" where    batch_date<'"+dtt+" 00:00:00.000'  and gl_no='"+jComboBoxGLcode.getSelectedItem().toString().substring(0,6)+"' and ac_no='"+jTextFieldAcc.getText() +"' and err_flag<>'E'"  ;                   
                       String sp2="\t \t",sp1="\t";  
      jProgressBarLoad.setVisible(true);
       jProgressBarLoad.setMaximum(35);
        jTextAreaSched.setText(" \t \t \t  OHAFIA MICRO FINANCE BANK LTD\n                            \t \t \t OHAFIA \n            \n             \t \t \t     ACCOUNT STATEMENT  \n \n "
                + " GL ACCOUNT HEAD: "+ jComboBoxGLcode.getSelectedItem().toString().substring(7)+" \n FROM: "+dtt.substring(8)+"/"+dtt.substring(5,7)+"/"+dtt.substring(0,4)
+" TO: "+dtt2.substring(8)+"/"+dtt2.substring(5,7)+"/"+dtt2.substring(0,4)+"\n");
        jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+line+"\n"+Heading);
            jTextAreaSched.setText(jTextAreaSched.getText()+"\n");
            
             
        try{
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                ResultSet current ;
                
               // if(dtt.equalsIgnoreCase(Cyear+"-01-01")){
               //    OpenBal=LastYrOpenBal; 
               // }else{
                current = stmt.executeQuery(BBF);
                 current.next();
            //OpenBal=current.getBigDecimal("Amt").add(LastYrOpenBal); //where LastYrOpenBal is the last year opening bal 
              OpenBal=current.getBigDecimal("Amt");
          OpeningBal=OpenBal;
               // }
             //OpenBalS=thseparate(OpenBal.setScale(2, RoundingMode.HALF_UP))+"";
            if(OpenBal.doubleValue()<0.00){OpenBalS="("+zeroes(thseparate(OpenBal.abs()))+" CR)"; } else{OpenBalS=zeroes(thseparate(OpenBal))+" DR";}
            bal=OpenBal.doubleValue();
          jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+"\t \t \t \t \t \t "+"Balance Brought Forward: \t \t "+OpenBalS+"\n");
 //JOptionPane.showMessageDialog(rootPane, Glcode+": "+ LastYrOpenBal+" : "+OpenBalS);
                //current = stmt.executeQuery(FilterQuery);
                // while(current.next()){// to list specific transaction that are to be displayed
                 //   RecNoList= RecNoList+",'"+current.getString("rec_no")+"'";
                 //}
                
this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                        query="select distinct (m.trx_no) num,rec_no,m.gl_no,text,cheque,trx_code,t.teller,amount, batch_date,m.ses_date from memtrans m inner join trx_text t on m.trx_no=t.trx_no" +
" where m.batch_date between '"+dtt+" 00:00:00.000' and '"+dtt2+" 00:00:00.000' " +
" and gl_no='"+jComboBoxGLcode.getSelectedItem().toString().substring(0,6)+"' and ac_no="+jTextFieldAcc.getText() +" and err_flag<>'E'"+ PRO+
" order by m.batch_date,t.rec_no " ;
                  current = stmt.executeQuery(query);

 String Balan="";         
                int i=0;
                String DateFmt="",DateFmt2="",chequeCtr="",textCtr="", addstr="";;
                while(current.next()){
                    
                    addstr="";
                    jProgressBarLoad.setValue(i);
                    //JOptionPane.showMessageDialog(rootPane, current.getString("text").substring(0,20).trim().length()+","+current.getString("cheque").trim().length());
                    if(current.getString("cheque").trim().length()<12){
                      
                     chequeCtr="........................";
                    }
                    else if(current.getString("text").trim().length()<20){
                    //JOptionPane.showMessageDialog(rootPane, current.getString("text"));

                         
                     int addtxt=20-(current.getString("text").trim().length());
                    // JOptionPane.showMessageDialog(rootPane, addtxt+"/"+current.getString("text").trim().length());
                     for(int t=1;t<addtxt; t++){
                      addstr=addstr+".";   
                     }
                     addstr=addstr+".";
                     textCtr=current.getString("text").trim()+addstr;
                        
                    }
                     
                    else{
                     chequeCtr=current.getString("cheque"); 
                     textCtr=current.getString("text").trim().substring(0,20);
                  // JOptionPane.showMessageDialog(rootPane, current.getString("text").trim());

                    }
                   
                    //format the Date 
                  DateFmt=  current.getString("ses_date").substring(0,10);
                  DateFmt2=  current.getString("batch_date").substring(0,10);

                  DateFmt=DateFmt.substring(8)+"/"+DateFmt.substring(5,7)+"/"+DateFmt.substring(0,4);
                  DateFmt2=DateFmt2.substring(8)+"/"+DateFmt2.substring(5,7)+"/"+DateFmt2.substring(0,4);

                    if(current.getDouble("amount")>0.00){
                        bal=bal+current.getDouble("amount");
                        Crbal=Crbal+Math.abs(current.getDouble("amount"));
                      if(bal>0){
                           Balan=thseparate(BigDecimal.valueOf(Math.abs(bal)).setScale(2, RoundingMode.HALF_UP)); 
                              Balan=zeroes(Balan)+" DR";///adding decimal 00 ending
                        }else{
                           Balan="("+thseparate(BigDecimal.valueOf(Math.abs(bal)).setScale(2, RoundingMode.HALF_UP));
                           Balan=zeroes(Balan)+".00 CR)";///adding decimal 00 ending
                           //Crbal=Crbal+Math.abs(current.getDouble("amount"));
                        } 
                     
                    jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+String.format("%1$8s",current.getString("num").trim())+sp1+String.format("%1$20s",textCtr.toUpperCase().trim())+sp1+String.format("%1$12s",chequeCtr.trim())+sp1+String.format("%1$2s",current.getString("trx_code").trim())+sp1+String.format("%1$10s", DateFmt2).trim()+sp1+String.format("%1$10s", DateFmt).trim()+sp1+String.format("%1$3s", thseparate(current.getBigDecimal("amount").setScale(2, RoundingMode.HALF_UP).abs())).trim()+sp1+String.format("%1$10s", "0.00").trim()+sp1+Balan+"\n");
                   // jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+current.getString("num")+sp1+String.format("%1$20s","text")+sp1+String.format("%1$12s","cheque")+sp1+String.format("%1$10s","trx_code")+sp1+sp1+String.format("%1$10s", current.getString("batch_date").substring(0,10).replaceAll("-", "/"))+sp1+String.format("%1$10s", current.getString("ses_date").substring(0,10).replaceAll("-", "/"))+sp1+String.format("%1$10s", Math.abs(current.getDouble("amount")))+sp1+String.format("%1$10s", "0.00")+sp1+Balan);

                   }else if(current.getDouble("amount")<0.00){
                        bal=bal+current.getDouble("amount");
                        Drbal=Drbal+Math.abs(current.getDouble("amount"));
                        if(bal>0.00){
                           Balan=thseparate(BigDecimal.valueOf(Math.abs(bal)).setScale(2, RoundingMode.HALF_UP)); 
                             if(!Balan.contains(".")){Balan=Balan+".00 DR";}///adding decimal 00 ending
                        }else{
                           Balan="("+thseparate(BigDecimal.valueOf(Math.abs(bal)).setScale(2, RoundingMode.HALF_UP));
                            if(!Balan.contains(".")){Balan=Balan+".00 CR)";}///adding decimal 00 ending
                        }
                        //correct format problem
                        if(Double.parseDouble(jComboBoxGLcode.getSelectedItem().toString().substring(0,6))<=101320){
                            //correct display settings for tellers
                                            jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+String.format("%1$8s",current.getString("num")).trim()+sp1+String.format("%1$20s",textCtr.toUpperCase().trim())+sp1+String.format("%1$12s",chequeCtr.trim())+sp1+String.format("%1$3s",current.getString("trx_code")).trim()+sp1+String.format("%1$10s",DateFmt2).trim()+sp1+String.format("%1$10s", DateFmt2).trim()+sp1+String.format("%1$10s", "0.00").trim()+sp1+String.format("%1$3s", thseparate(current.getBigDecimal("amount").setScale(2, RoundingMode.HALF_UP).abs())).trim()+sp1+Balan+"\n");

                        }
                        else{
                    jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+String.format("%1$8s",current.getString("num")).trim()+sp1+String.format("%1$20s",current.getString("text").substring(0,20))+sp1+String.format("%1$12s",chequeCtr.trim())+sp1+String.format("%1$2s",current.getString("trx_code")).trim()+sp1+String.format("%1$10s",DateFmt2).trim()+sp1+String.format("%1$10s", DateFmt2).trim()+sp1+String.format("%1$10s", "0.00").trim()+sp1+String.format("%1$3s",thseparate(current.getBigDecimal("amount").setScale(2, RoundingMode.HALF_UP).abs())).trim()+sp1+Balan+"\n");
                        //jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+current.getString("num")+sp1+String.format("%1$20s","text")+sp1+String.format("%1$12s","cheque")+sp1+sp1+String.format("%1$10s","trx_code")+sp1+sp1+String.format("%1$10s", current.getString("batch_date").substring(0,10).replaceAll("-", "/"))+sp1+String.format("%1$10s", current.getString("ses_date").substring(0,10).replaceAll("-", "/"))+sp1+String.format("%1$10s", "0.00")+sp1+String.format("%1$10s", Math.abs(current.getDouble("amount")))+sp1+Balan);

                        }
                    }
                  i=i+1;                // JOptionPane.showMessageDialog(rootPane, Drbal);
 
                }
               jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+line);
               jTextAreaSched.setText(jTextAreaSched.getText()+"\n Total: "+i+Gap+zeroes(thseparate(BigDecimal.valueOf(Crbal).setScale(2,RoundingMode.HALF_UP)))+"\t"+zeroes(thseparate(BigDecimal.valueOf(Drbal).setScale(2,RoundingMode.HALF_UP))));
               if(bal<0.00){             
                   jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+"\t \t \t \t \t \t \t \t "+"Balance As At Reporting Date:"+"\t"+zeroes(thseparate(BigDecimal.valueOf(Math.abs(bal)).setScale(2, RoundingMode.HALF_UP)))+" CR \n \n \n");
}
               else{
               jTextAreaSched.setText(jTextAreaSched.getText()+"\n"+" \n \t \t \t \t \t \t  "+"Balance As At Reporting Date:"+"\t"+zeroes(thseparate(BigDecimal.valueOf(Math.abs(bal)).setScale(2, RoundingMode.HALF_UP)))+" DR \n \n \n");
               }
               jLabelStatus.setText("Completed");
               current.close();
                conn.close();
                //jProgressBarLoad.setVisible(false);
                this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                Font font = new Font("Verdana", Font.BOLD, 8);
        this.setFont(font);
        
        {

          
             try
 {InputStream in = new FileInputStream(new File("C:\\ReportO\\GLACC.jrxml"));
            

            
String sql=" select distinct (m.trx_no) num,rec_no,m.gl_no,text,cheque,trx_code,t.teller,amount, batch_date,m.ses_date from memtrans m inner join trx_text t on m.trx_no=t.trx_no " +
" where m.batch_date  BETWEEN '"+dtt+" 00:00:00.000' and '"+dtt2+" 00:00:00.000' " +
" and gl_no="+jComboBoxGLcode.getSelectedItem().toString().substring(0,6)+" and ac_no="+jTextFieldAcc.getText()+" and err_flag<>'E'";
  // JOptionPane.showMessageDialog(this,sql);
        this.displayReport(in,sql,"fromdate",dtt,"todate",dtt2,"GLNO",jComboBoxGLcode.getSelectedItem().toString().substring(0,6),"ACNO",jTextFieldAcc.getText(),"AC_HEAD",jComboBoxGLcode.getSelectedItem().toString().substring(7),"OpeningBal",OpeningBal);
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
            }
            catch(Exception e){ JOptionPane.showMessageDialog(this,e.getMessage());}
            
        
       
                                           

                                          
      

         
        
   
        
    
              
        
      
     
        
        
         
       

         
          

           // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

     jProgressBarLoad.setVisible(false);    
Calendar now=Calendar.getInstance();

SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
 // JOptionPane.showMessageDialog(rootPane, now.getTime().toString());
  
        Date dt =new Date(sdf.format(now.getTime()).toString());
        jDateChooser1.setDate(dt);
        jDateChooser2.setDate(dt);
       String query="select gl_no,ac_name from coa where gl_no not in ('100000','101000')" +
" order by gl_no";
       conn=glob.getConnect();
        try{
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                ResultSet current = stmt.executeQuery(query);

          
            
                while(current.next()){
jComboBoxGLcode.addItem(current.getString("gl_no")+"|"+current.getString("ac_name"));
                  
                }
               
                current.close();
                conn.close();
            }
            catch(Exception e){ JOptionPane.showMessageDialog(this,e.getMessage());}
         
    }//GEN-LAST:event_formWindowOpened

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
if(jLabelStatus.getText().equalsIgnoreCase("Completed")){jLabelStatus.setText("");jProgressBarLoad.setVisible(false);}
else {jLabelStatus.setText("Loading..."); jProgressBarLoad.setVisible(true);jProgressBarLoad.setValue(1);}       // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseEntered

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
jProgressBarLoad.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2FocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           PrinterJob job = PrinterJob.getPrinterJob();
        PageFormat format=job.defaultPage();
        format.setOrientation(PageFormat.PORTRAIT);
        Paper paper =new Paper(); //to set paper margin
        double margin=2.5;
        paper.setImageableArea(margin, margin, paper.getWidth()-margin*1, paper.getHeight()-margin*1);
        format.setPaper(paper);
        Font font = new Font("Verdana", Font.BOLD, 8);
            jTextAreaSched.setFont(font);
            String footer = " Page - {0}";
        job.setPrintable(jTextAreaSched.getPrintable(new MessageFormat("GL Report"), new MessageFormat(footer)),format);
   boolean ok =job.printDialog();
            if(ok){
        try {
            
           job.print();// TODO add your handling code here:
        } catch (PrinterException ex) {
         JOptionPane.showMessageDialog(this, ex.getMessage()); 
        }
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GLACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GLACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GLACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GLACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GLACC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBoxGLcode;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBarLoad;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaSched;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldAcc;
    // End of variables declaration//GEN-END:variables
    Global glob = new Global();
        
   Connection conn=glob.getConnect();
   public String zeroes(String Amount){
   if(!Amount.contains(".")){Amount=Amount+".00";}///adding decimal 00 ending
       return Amount;
   }

 public String thseparate(BigDecimal amount){
 DecimalFormat formatter = (DecimalFormat) NumberFormat.getInstance(Locale.US);
DecimalFormatSymbols symbols = formatter.getDecimalFormatSymbols();

symbols.setGroupingSeparator(',');
formatter.setDecimalFormatSymbols(symbols);
return formatter.format((amount));    
 }
 
 public void displayReport(InputStream report,String sql,String paraname1,String paravalue1,String paraname2,String paravalue2,String paraname3,String paravalue3,String paraname4,String paravalue4,String paraname5,String paravalue5,String paraname6,BigDecimal paravalue6){
     try{
    JasperDesign jd= JRXmlLoader.load(report);
 
            JRDesignQuery newQuery= new JRDesignQuery();
           newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr= JasperCompileManager.compileReport(jd);
            HashMap para= new HashMap();
             para.put("Compname","OHAFIA MICROFINANCE BANK PLC"); 
             //JOptionPane.showMessageDialog(rootPane, companyname);
            if(!paravalue1.isEmpty()){
             para.put(paraname1,paravalue1);    
            }
            if(!paravalue2.isEmpty()){
           para.put(paraname2,paravalue2);   
            }
            if(!paravalue3.isEmpty()){
           para.put(paraname3,paravalue3);   
            }
            if(!paravalue4.isEmpty()){
           para.put(paraname4,paravalue4);   
            }
            if(!paravalue5.isEmpty()){
           para.put(paraname5,paravalue5);   
            }
             
           para.put(paraname6,paravalue6);   
            
            JasperPrint j=JasperFillManager.fillReport(jr, para, glob.getConnect());
            
          
            JasperViewer.viewReport(j,false);
     }
     catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
            
            
            
            
             
            
            

}
}
