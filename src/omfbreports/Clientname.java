/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package omfbreports;

import java.awt.Cursor;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Emmanuel Ikpe
 */
public class Clientname extends javax.swing.JFrame {

    /**
     * Creates new form Clientname
     */
    public Clientname() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablename = new javax.swing.JTable();
        jButtonsearch = new javax.swing.JButton();
        jTextFieldAcc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Client Name");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jScrollPane1ComponentShown(evt);
            }
        });

        jTablename.setBackground(new java.awt.Color(255, 153, 51));
        jTablename.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTablename.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Branch", "Product", "GL A/C NO", "A/C NO", "Name", "Ref No/ Address", "ID Card", "Bank Verification No", "NUBAN Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablename.setShowHorizontalLines(isEnabled());
        jTablename.setShowVerticalLines(isEnabled());
        jTablename.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablenameMouseClicked(evt);
            }
        });
        jTablename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTablenameKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTablename);

        jButtonsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/omfbreports/Resource/searchicon.PNG"))); // NOI18N
        jButtonsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsearchActionPerformed(evt);
            }
        });

        jTextFieldAcc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldAcc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAccKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Search on A/C Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonsearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldAcc)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsearchActionPerformed
String qq;
if(jTextFieldAcc.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "You must type \n something to search");
}else{
/////Clear previous search (if any)

    i=0;

        if(jLabel1.getText().contains("Name")){
    qq=query+jTextFieldAcc.getText()+"%'"; 
}else{
  qq=query+jTextFieldAcc.getText()+"'";
}
//JOptionPane.showMessageDialog(rootPane, query);
        try{
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                ResultSet current = stmt.executeQuery(qq);
                 this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                   jTablename.getColumnModel().getColumn(4).setPreferredWidth(100);
               jTablename.getColumnModel().getColumn(4).setPreferredWidth(400);
               jTablename.getColumnModel().getColumn(5).setPreferredWidth(500);
                 while(current.next()){
                     jTablename.getModel().setValueAt(current.getString("branch"), i, 0);
                    jTablename.getModel().setValueAt(current.getString("cust_no"), i, 3);
                    jTablename.getModel().setValueAt(current.getString("name").trim(), i, 4);
                    jTablename.getModel().setValueAt(current.getString("ref_no").trim()+"-"+current.getString("address").trim(), i, 5);

                    jTablename.getModel().setValueAt(current.getString("id_card"), i, 6);
                    jTablename.getModel().setValueAt(current.getString("Bank_VNO"), i, 7);

                     i=i+1;
                 }
                 
                 
                  this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));  
                 //JOptionPane.showMessageDialog(rootPane, i+" Records found ");
                   jTablename.requestFocusInWindow();
                  
                 current.close();                     

                 
}
catch(HeadlessException | SQLException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());
}
  
 jTablename.requestFocusInWindow();

}               
    }//GEN-LAST:event_jButtonsearchActionPerformed

    private void jTablenameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablenameMouseClicked
if(evt.getClickCount()==2 && !jTablename.getModel().getValueAt(jTablename.getSelectedRow(),3).toString().isEmpty())  {
  String sqlaccinfo="select m.cust_no cnum,name,ref_no,reg_date,phone,id_card,group_name,address,Bank_VNO,gl_no,ac_no,NUBAN_CODE,ac_status from member m inner join customer c on m.cust_no=c.cust_no" +
" where ac_no='"+jTablename.getModel().getValueAt(jTablename.getSelectedRow(),3)+"'";
          
            
  
                  try{
                      this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                ResultSet current = stmt.executeQuery(sqlaccinfo);
                 if(current.next()){
                 acctitle=current.getString("name");
                 regdate=current.getString("reg_date");
                 groupname=current.getString("group_name");
                 idcard=current.getString("ID_card");
                 cusno=current.getString("cnum");
                 BVN=current.getString("Bank_VNO");
                 accnoonly=current.getString("ac_no");
                accno=current.getString("gl_no")+"."+current.getString("ac_no");
                nuban=current.getString("nuban_code");
                ref=current.getString("ref_no");
                phone=current.getString("phone");
                addr=current.getString("address");
                status=current.getString("ac_status");
                if(status.equalsIgnoreCase("A")){status="Active";}
                else if(status.equalsIgnoreCase("C")){status="Closed";}
                else if(status.equalsIgnoreCase("D")){status="Dormant";}
                else if(status.equalsIgnoreCase("H")){status="On Hold";}
                 }
                while(i>0){
                    jTablename.getModel().setValueAt("", i, 0);
                   jTablename.getModel().setValueAt("", i, 3);
                   jTablename.getModel().setValueAt("", i, 4);
                   jTablename.getModel().setValueAt("", i, 5);

                    jTablename.getModel().setValueAt("", i, 6);
                   jTablename.getModel().setValueAt("", i, 7);

                    i=i-1;
                }
                i=0;
                this.dispose();
                current.close();
                conn.close();
                             }
                  catch(Exception e){
                      JOptionPane.showMessageDialog(rootPane, e.getMessage());
                  }
                
 this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                
                    }
                   
                    //format the Date 
                  
          
                  
        
    


    }//GEN-LAST:event_jTablenameMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
///clear previous search
       
        jTextFieldAcc.requestFocusInWindow(); 

    }//GEN-LAST:event_formWindowOpened

    private void jTextFieldAccKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAccKeyPressed
if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    jButtonsearch.doClick();
}
    }//GEN-LAST:event_jTextFieldAccKeyPressed

    private void jTablenameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablenameKeyPressed
 
  String sqlaccinfo="select m.cust_no cnum,name,ref_no,reg_date,phone,id_card,group_name,address,Bank_VNO,gl_no,ac_no,NUBAN_CODE,ac_status from member m inner join customer c on m.cust_no=c.cust_no" +
" where ac_no='"+jTablename.getModel().getValueAt(jTablename.getSelectedRow(),3)+"'";
          
            
  
                  try{
                      this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                ResultSet current = stmt.executeQuery(sqlaccinfo);
                 current.next();
                 acctitle=current.getString("name");
                 regdate=current.getString("reg_date");
                 groupname=current.getString("group_name");
                 idcard=current.getString("ID_card");
                 cusno=current.getString("cnum");
                 BVN=current.getString("Bank_VNO");
                 accnoonly=current.getString("ac_no");
                accno=current.getString("gl_no")+"."+current.getString("ac_no");
                nuban=current.getString("nuban_code");
                ref=current.getString("ref_no");
                phone=current.getString("phone");
                addr=current.getString("address");
                status=current.getString("ac_status");
                if(status.equalsIgnoreCase("A")){status="Active";}
                else if(status.equalsIgnoreCase("C")){status="Closed";}
                else if(status.equalsIgnoreCase("D")){status="Dormant";}
                else if(status.equalsIgnoreCase("H")){status="On Hold";}
                this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                while(i>=0){
                     jTablename.getModel().setValueAt("", i, 0);
                    jTablename.getModel().setValueAt("", i, 3);
                    jTablename.getModel().setValueAt("", i, 4);
                    jTablename.getModel().setValueAt("", i, 5);

                    jTablename.getModel().setValueAt("", i, 6);
                    jTablename.getModel().setValueAt("", i, 7);

                     i=i-1;
                }
                i=0;
                this.dispose();
                current.close();
                conn.close();
                             }
                  catch(Exception e){
                      JOptionPane.showMessageDialog(rootPane, e.getMessage());
                  }
                
 
                
                            // TODO add your handling code here:
    }//GEN-LAST:event_jTablenameKeyPressed

    private void jScrollPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jScrollPane1ComponentShown
             // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1ComponentShown

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    // if(i>0){
   for(int n=0; n<=i; n++){
                     jTablename.getModel().setValueAt("", n, 0);
                    jTablename.getModel().setValueAt("", n, 3);
                    jTablename.getModel().setValueAt("", n, 4);
                    jTablename.getModel().setValueAt("", n, 5);

                    jTablename.getModel().setValueAt("", n, 6);
                    jTablename.getModel().setValueAt("", n, 7);

   }
   i=0;
   jTextFieldAcc.setText("");
   jTextFieldAcc.requestFocusInWindow();
//}        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientname.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientname.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientname.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientname.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientname().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonsearch;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTablename;
    public javax.swing.JTextField jTextFieldAcc;
    // End of variables declaration//GEN-END:variables
Global glob = new Global();
Connection conn;

String BVN,acctitle,nuban,accno="n",status,cusno,addr,ref,phone,branch,regdate,idcard,groupname, accnoonly;
String query;
int i=0;

}
