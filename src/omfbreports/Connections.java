/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package omfbreports;



import java.awt.Cursor;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author Emmanuel Ikpe
 */
public class Connections extends javax.swing.JFrame {

    /**
     * Creates new form Connections
     */
    public Connections() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        computer9 = new javax.swing.JButton();
        computer3 = new javax.swing.JButton();
        computer1 = new javax.swing.JButton();
        computer5 = new javax.swing.JButton();
        computer6 = new javax.swing.JButton();
        computer16 = new javax.swing.JButton();
        computer4 = new javax.swing.JButton();
        computer2 = new javax.swing.JButton();
        computer8 = new javax.swing.JButton();
        computer7 = new javax.swing.JButton();
        computer10 = new javax.swing.JButton();
        computer12 = new javax.swing.JButton();
        computer14 = new javax.swing.JButton();
        computer13 = new javax.swing.JButton();
        computer20 = new javax.swing.JButton();
        computer15 = new javax.swing.JButton();
        computer11 = new javax.swing.JButton();
        computer22 = new javax.swing.JButton();
        computer19 = new javax.swing.JButton();
        computer23 = new javax.swing.JButton();
        computer24 = new javax.swing.JButton();
        computer18 = new javax.swing.JButton();
        computer21 = new javax.swing.JButton();
        computer26 = new javax.swing.JButton();
        computer27 = new javax.swing.JButton();
        computer25 = new javax.swing.JButton();
        computer17 = new javax.swing.JButton();
        computer32 = new javax.swing.JButton();
        computer28 = new javax.swing.JButton();
        computer31 = new javax.swing.JButton();
        computer30 = new javax.swing.JButton();
        computer29 = new javax.swing.JButton();
        computer33 = new javax.swing.JButton();
        computer34 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxfloor = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxsys = new javax.swing.JComboBox<>();
        jComboBoxops = new javax.swing.JComboBox<>();
        jButtonrun = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneT = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        computer9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer9.setIconTextGap(0);
        computer9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer9MouseClicked(evt);
            }
        });
        computer9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer9ActionPerformed(evt);
            }
        });

        computer3.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer3.setIconTextGap(0);
        computer3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer3MouseClicked(evt);
            }
        });
        computer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer3ActionPerformed(evt);
            }
        });

        computer1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        computer1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer1.setIconTextGap(0);
        computer1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer1MouseClicked(evt);
            }
        });
        computer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer1ActionPerformed(evt);
            }
        });

        computer5.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer5.setIconTextGap(0);
        computer5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer5MouseClicked(evt);
            }
        });
        computer5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer5ActionPerformed(evt);
            }
        });

        computer6.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer6.setIconTextGap(0);
        computer6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer6MouseClicked(evt);
            }
        });
        computer6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer6ActionPerformed(evt);
            }
        });

        computer16.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        computer16.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer16.setText("jButton3");
        computer16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer16.setIconTextGap(0);
        computer16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer16MouseClicked(evt);
            }
        });
        computer16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer16ActionPerformed(evt);
            }
        });

        computer4.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer4.setIconTextGap(0);
        computer4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer4MouseClicked(evt);
            }
        });
        computer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer4ActionPerformed(evt);
            }
        });

        computer2.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer2.setIconTextGap(0);
        computer2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer2MouseClicked(evt);
            }
        });
        computer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer2ActionPerformed(evt);
            }
        });

        computer8.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer8.setIconTextGap(0);
        computer8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer8MouseClicked(evt);
            }
        });
        computer8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer8ActionPerformed(evt);
            }
        });

        computer7.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer7.setIconTextGap(0);
        computer7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer7MouseClicked(evt);
            }
        });
        computer7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer7ActionPerformed(evt);
            }
        });

        computer10.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer10.setText("jButton3");
        computer10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer10.setIconTextGap(0);
        computer10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer10MouseClicked(evt);
            }
        });
        computer10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer10ActionPerformed(evt);
            }
        });

        computer12.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer12.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer12.setText("jButton3");
        computer12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer12.setIconTextGap(0);
        computer12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer12MouseClicked(evt);
            }
        });
        computer12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer12ActionPerformed(evt);
            }
        });

        computer14.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer14.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer14.setText("jButton3");
        computer14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer14.setIconTextGap(0);
        computer14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer14MouseClicked(evt);
            }
        });
        computer14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer14ActionPerformed(evt);
            }
        });

        computer13.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer13.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer13.setText("jButton3");
        computer13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer13.setIconTextGap(0);
        computer13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer13MouseClicked(evt);
            }
        });
        computer13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer13ActionPerformed(evt);
            }
        });

        computer20.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer20.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer20.setText("jButton3");
        computer20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer20.setIconTextGap(0);
        computer20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer20MouseClicked(evt);
            }
        });
        computer20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer20ActionPerformed(evt);
            }
        });

        computer15.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer15.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer15.setText("jButton3");
        computer15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer15.setIconTextGap(0);
        computer15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer15MouseClicked(evt);
            }
        });
        computer15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer15ActionPerformed(evt);
            }
        });

        computer11.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer11.setText("jButton3");
        computer11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer11.setIconTextGap(0);
        computer11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer11MouseClicked(evt);
            }
        });
        computer11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer11ActionPerformed(evt);
            }
        });

        computer22.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer22.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer22.setText("jButton3");
        computer22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer22.setIconTextGap(0);
        computer22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer22MouseClicked(evt);
            }
        });

        computer19.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer19.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer19.setText("jButton3");
        computer19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer19.setIconTextGap(0);
        computer19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer19MouseClicked(evt);
            }
        });
        computer19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer19ActionPerformed(evt);
            }
        });

        computer23.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer23.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer23.setText("jButton3");
        computer23.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer23.setIconTextGap(0);
        computer23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer23MouseClicked(evt);
            }
        });

        computer24.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer24.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer24.setText("jButton3");
        computer24.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer24.setIconTextGap(0);
        computer24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer24MouseClicked(evt);
            }
        });

        computer18.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer18.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer18.setText("jButton3");
        computer18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer18.setIconTextGap(0);
        computer18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer18MouseClicked(evt);
            }
        });
        computer18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer18ActionPerformed(evt);
            }
        });

        computer21.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer21.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer21.setText("jButton3");
        computer21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer21.setIconTextGap(0);
        computer21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer21MouseClicked(evt);
            }
        });

        computer26.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer26.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer26.setText("jButton3");
        computer26.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer26.setIconTextGap(0);

        computer27.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer27.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer27.setText("jButton3");
        computer27.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer27.setIconTextGap(0);

        computer25.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer25.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer25.setText("jButton3");
        computer25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer25.setIconTextGap(0);
        computer25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer25MouseClicked(evt);
            }
        });

        computer17.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        computer17.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer17.setText("jButton3");
        computer17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer17.setIconTextGap(0);
        computer17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computer17MouseClicked(evt);
            }
        });
        computer17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computer17ActionPerformed(evt);
            }
        });

        computer32.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer32.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer32.setText("jButton3");
        computer32.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer32.setIconTextGap(0);

        computer28.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer28.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer28.setText("jButton3");
        computer28.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer28.setIconTextGap(0);

        computer31.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer31.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer31.setText("jButton3");
        computer31.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer31.setIconTextGap(0);

        computer30.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer30.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer30.setText("jButton3");
        computer30.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer30.setIconTextGap(0);

        computer29.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer29.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer29.setText("jButton3");
        computer29.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer29.setIconTextGap(0);

        computer33.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer33.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer33.setText("jButton3");
        computer33.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer33.setIconTextGap(0);

        computer34.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        computer34.setIcon(new javax.swing.ImageIcon("C:\\Users\\Emmanuel Ikpe\\Desktop\\Ohafia Files\\IT IS POLICY\\red.png")); // NOI18N
        computer34.setText("jButton3");
        computer34.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        computer34.setIconTextGap(0);

        jDesktopPane1.setLayer(computer9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer20, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer23, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer24, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer26, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer27, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer25, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer32, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer28, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer31, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer30, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer29, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer33, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(computer34, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(computer1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computer2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(computer3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computer4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(computer5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(computer33, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(computer17, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(computer18, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(computer19, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(computer9, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(computer10, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(computer11, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(computer12, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(computer20, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(computer13, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(computer21, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)))
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(computer6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computer7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(computer8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(computer14, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computer15, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computer16, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(computer22, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computer23, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computer24, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(computer25, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computer26, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(computer27, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(computer28, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(computer29, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computer30, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computer31, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computer32, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap(469, Short.MAX_VALUE)
                    .addComponent(computer34, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(436, 436, 436)))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(computer1)
                        .addComponent(computer2)
                        .addComponent(computer3)
                        .addComponent(computer4)
                        .addComponent(computer5)
                        .addComponent(computer6))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(computer7)
                            .addComponent(computer8))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(computer14)
                            .addComponent(computer15)
                            .addComponent(computer16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(computer19)
                            .addComponent(computer20)
                            .addComponent(computer21)
                            .addComponent(computer22)
                            .addComponent(computer23)
                            .addComponent(computer24)))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(computer9)
                            .addComponent(computer10)
                            .addComponent(computer11)
                            .addComponent(computer12)
                            .addComponent(computer13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(computer18)
                            .addComponent(computer17)
                            .addComponent(computer33))))
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(computer32)
                            .addComponent(computer31)
                            .addComponent(computer30)
                            .addComponent(computer28))
                        .addGap(20, 20, 20))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(computer25)
                                .addComponent(computer26)
                                .addComponent(computer27))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(computer29)))
                        .addContainerGap(22, Short.MAX_VALUE))))
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap(280, Short.MAX_VALUE)
                    .addComponent(computer34)
                    .addGap(12, 12, 12)))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 5));

        jComboBoxfloor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ground floor", "First Floor", "Second Floor", "Server room", "Laptop" }));

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Check internet");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Net Scan");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBoxfloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxfloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 255), 5));

        jComboBoxsys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxsysActionPerformed(evt);
            }
        });

        jComboBoxops.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "List task", "Restart", "Shutdown" }));

        jButtonrun.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButtonrun.setText("Run");
        jButtonrun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonrunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jComboBoxsys, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxops, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonrun, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxops, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxsys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonrun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        jScrollPane1.setViewportView(jTextPaneT);

        jMenu1.setText("Update");

        jMenuItem1.setText("Update Dynamic IP");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Remote User");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jCheckBoxMenuItem1.setText("Administrator");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setText("Other User");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(234, 234, 234))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(251, 251, 251))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
reset();// hides the computers



    }//GEN-LAST:event_formWindowOpened

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
reset();// reset the icons to initial state
 String[] ip = null;String subnet="192.168.101",reply="data"; // the network address e.g 192.168.1
//get the selected section of the Bank
     if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("Ground floor")){
      ip = new String[]{"RISK-PC","NNENNA-PC","MARKETER-PC","SECRETARY-PC","ROCK-PC"};  
      subnet="";
     }
     else if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("First floor")){
       ip = new String[]{"TEMPSERVER-PC","MD-PC","Teller1-pc","TELLER3-pc"};  
       subnet="";
     }
     else if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("Second floor")){
      // ip = new String[]{"188","155","54","131","122","80","19","198","14","116","10","177","21","12","59","89"};
       subnet="";
       ip = new String[]{"OMFBICT","ATM_DESK-PC","Creditoffice-pc","credit-manager","cashier3-pc","customercare-pc","PIN-PC","MD-TOSH-PC","Marketing-PC","FINANCE-PC","AUDIT2-PC",
           "AUDIT-PC","ATM-PC","PAYCASHIER","OPERATIONSMANAG","BVN-PC"};
     subnet="";
     }
     else if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("Server room")){
      ip = new String[]{"1","2","3","7","9","202"};
      subnet="192.168.101.";
      reply="TTL";
     }
      else if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("Laptop")){
      ip = new String[]{"OMFBICT","PIN-PC","credit-manager","MD-TOSH-PC","BVN-PC","MD-PC","NNENNA-PC"};
      subnet="";
     }
        try
	{
		
                 Process process ;
    timeout=100000;
   for (int i=0;i<ip.length;i++){
       //host=subnet + "." + ip[i];
        //hostname=InetAddress.getByName(host).getHostName();
        host=subnet+ ip[i];
        hostname=host;
        jComboBoxsys.addItem(host);
        process = java.lang.Runtime.getRuntime().exec("ping "+host); 
        BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
 
            //reads the outputs
            int x = 1;
            String inputLine = in.readLine();
           
          //  System.out.println(in.readLine());
            while ((inputLine != null)) {
                if (inputLine.length() > 0 && inputLine.contains(reply)) {
                     //time = inputLine.substring(inputLine.indexOf("time"));
                     x=0;
                     break;                        
                }
                inputLine = in.readLine();
            }  
         
        if (x == 0) { 
           setGreenIcon(i);
           
            
        } 
        else { 
            setRedIcon(i);
           
        }
       
   }

   
        
	}
        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        this.setTitle("Connectivity Status of System  in "+jComboBoxfloor.getSelectedItem().toString()+" Double Click to remote connect");
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void computer17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer17ActionPerformed
//getDetail(computer17.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_computer17ActionPerformed

    private void computer18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer18ActionPerformed
       //getDetail(computer18.getText()); 
    }//GEN-LAST:event_computer18ActionPerformed

    private void computer19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer19ActionPerformed
getDetail(computer19.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer19ActionPerformed

    private void computer20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer20ActionPerformed
getDetail(computer20.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer20ActionPerformed

    private void computer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer1ActionPerformed
//getDetail(computer1.getText()); 



    }//GEN-LAST:event_computer1ActionPerformed

    private void computer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer2ActionPerformed
//getDetail(computer2.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer2ActionPerformed

    private void computer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer3ActionPerformed
//getDetail(computer3.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer3ActionPerformed

    private void computer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer4ActionPerformed
//getDetail(computer4.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer4ActionPerformed

    private void computer5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer5ActionPerformed
//getDetail(computer5.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer5ActionPerformed

    private void computer6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer6ActionPerformed
//getDetail(computer6.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer6ActionPerformed

    private void computer7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer7ActionPerformed
//getDetail(computer7.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer7ActionPerformed

    private void computer8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer8ActionPerformed
//getDetail(computer8.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer8ActionPerformed

    private void computer9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer9ActionPerformed
//getDetail(computer9.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer9ActionPerformed

    private void computer10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer10ActionPerformed
     //   getDetail(computer10.getText()); 
    }//GEN-LAST:event_computer10ActionPerformed

    private void computer11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer11ActionPerformed
//getDetail(computer11.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer11ActionPerformed

    private void computer12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer12ActionPerformed
//getDetail(computer12.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer12ActionPerformed

    private void computer13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer13ActionPerformed
//getDetail(computer13.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer13ActionPerformed

    private void computer14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer14ActionPerformed
//getDetail(computer14.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer14ActionPerformed

    private void computer15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer15ActionPerformed
//getDetail(computer15.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer15ActionPerformed

    private void computer16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computer16ActionPerformed
//getDetail(computer16.getText());         // TODO add your handling code here:
    }//GEN-LAST:event_computer16ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//  String[] ip = new String[]{"1","2","7","9","10","14","15","19","21","45","54","55","59","80","89","","99","101","104","105","107","111","116","122","123"
      // ,"131","155","188"};
      reset();// reset the icons to initial state
      Process p=null;
      String[] ip=null;
       if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("Ground floor")){
      
         ip = new String[]{"RISK-PC","NNENNA-PC","MARKETER-PC","SECRETARY-PC","ROCK-PC"};
      subnet="";
     }
     else if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("First floor")){
       ip = new String[]{"TEMPSERVER-PC","MD-PC","Teller1-pc","TELLER3-pc"};  
       subnet="";
     }
     else if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("Second floor")){
      // ip = new String[]{"188","155","54","131","122","80","19","198","14","116","10","177","21","12","59","89"};
       subnet="";
       ip = new String[]{"OMFBICT","ATM_DESK-PC","Creditoffice-pc","credit-manager","cashier3-pc","customercare-pc","PIN-PC","MD-TOSH-PC","Marketing-PC","FINANCE-PC","AUDIT2-PC",
           "AUDIT-PC","ATM-PC","PAYCASHIER","OPERATIONSMANAG","BVN-PC"};
     subnet="";
     }
     else if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("Server room")){
      ip = new String[]{"1","2","3","7","9","202"};
      subnet="192.168.101.";
      //reply="TTL";
     }
      else if(jComboBoxfloor.getSelectedItem().toString().equalsIgnoreCase("Laptop")){
      ip = new String[]{"OMFBICT","PIN-PC","credit-manager","MD-TOSH-PC","BVN-PC","MD-PC","NNENNA-PC"};
      subnet="";
     }
 String internetstatus="";
        try
	{
		
  
 
       //host=subnet + "." + i;
    
    String user="Administrator";
    String pass="Admin123Server";
    //String cmd="cmd.exe ping google.com";
    //psexec.exe \\RemoteCompter -u Username -p Password cmd [arguments]
   
     String psCommand ;

      

   

      // Run remote command

     File f = new File("C:\\Program Files (x86)\\PsExec\\");

      
    //WMIC /node:192.168.101.3 /user:Administrator /password:Admin123Server process call create "cmd.exe ping google.com"
       for (int i=0;i<ip.length;i++){
    hostname=ip[i];    
     psCommand = "C:\\\\Program Files (x86)\\\\PsExec/psexec.exe \\\\"+subnet+ip[i] + " -u " + user + " -p " + pass+" ping www.google.com";
    // JOptionPane.showMessageDialog(rootPane, psCommand);
 p = Runtime.getRuntime().exec(psCommand);
//Process p = Runtime.getRuntime().exec("WMIC /node:"+ip[i]+" /user:"+user+" /password:"+pass+" process call create '"+cmd+"'");
 BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));
 
            
           
            String inputLine=""; //= in.readLine();
            
            while ((inputLine=in.readLine()) !=null) {
if (inputLine.length() > 0 && inputLine.contains("Pinging")) {
                     //time = inputLine.substring(inputLine.indexOf("time"));
                    internetstatus="Connected"; //reads the outputs
                    hostname=subnet+ip[i];
                    
                     break;                        
                }
                inputLine = in.readLine();
                
            } 
   System.out.println(inputLine );
            
           
                
            if (internetstatus.equalsIgnoreCase("Connected")) { 
           setGreenIcon(i);
           
            
        }else{
             setRedIcon(i);    
            } 
       
       
   } //end of for statement

   
        
	}
        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}

             // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void computer1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer1MouseClicked
if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer1.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}        // TODO add your handling code here:
    }//GEN-LAST:event_computer1MouseClicked

    private void computer2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer2MouseClicked
if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer2.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}    }//GEN-LAST:event_computer2MouseClicked

    private void computer3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer3MouseClicked
if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer3.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}        // TODO add your handling code here:
    }//GEN-LAST:event_computer3MouseClicked

    private void computer4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer4MouseClicked
if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer4.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}        // TODO add your handling code here:
    }//GEN-LAST:event_computer4MouseClicked

    private void computer5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer5MouseClicked
if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer5.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}  
    }//GEN-LAST:event_computer5MouseClicked

    private void computer7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer7MouseClicked
      if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer7.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer7MouseClicked

    private void computer8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer8MouseClicked
      if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer8.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer8MouseClicked

    private void computer9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer9MouseClicked
       if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer9.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer9MouseClicked

    private void computer10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer10MouseClicked
      if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer10.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer10MouseClicked

    private void computer11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer11MouseClicked
       if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer11.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer11MouseClicked

    private void computer12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer12MouseClicked
       if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer12.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer12MouseClicked

    private void computer13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer13MouseClicked
       if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer13.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer13MouseClicked

    private void computer14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer14MouseClicked
       if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer14.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer14MouseClicked

    private void computer15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer15MouseClicked
       if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer15.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer15MouseClicked

    private void computer16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer16MouseClicked
        if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer16.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer16MouseClicked

    private void computer17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer17MouseClicked
     if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer17.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer17MouseClicked

    private void computer18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer18MouseClicked
      if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer18.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer18MouseClicked

    private void computer19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer19MouseClicked
        if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer19.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer19MouseClicked

    private void computer20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer20MouseClicked
        if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer20.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer20MouseClicked

    private void computer21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer21MouseClicked
      if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer21.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer21MouseClicked

    private void computer22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer22MouseClicked
       if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer22.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer22MouseClicked

    private void computer23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer23MouseClicked
    if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer23.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer23MouseClicked

    private void computer24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer24MouseClicked
       if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer24.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer24MouseClicked

    private void computer25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer25MouseClicked
      if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer25.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
    }//GEN-LAST:event_computer25MouseClicked

    private void computer6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computer6MouseClicked
if(evt.getClickCount()==2){
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    remoteConnect(computer6.getText());
    this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}       
    }//GEN-LAST:event_computer6MouseClicked

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
       adminlogin=false;
         otherlogin=true;
         jCheckBoxMenuItem1.setSelected(false);
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
       adminlogin=true;
         otherlogin=false;
         jCheckBoxMenuItem2.setSelected(false);
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jComboBoxsysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxsysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxsysActionPerformed

    private void jButtonrunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonrunActionPerformed
    String user="Administrator";
    String pass="Admin123Server"; 
   String psCommand="";
   String ip;
        if(jComboBoxops.getSelectedItem().toString().equalsIgnoreCase("Shutdown")){
            
             psCommand = "C:\\\\Program Files (x86)\\\\PsExec/psexec.exe \\\\"+jComboBoxsys.getSelectedItem().toString() + " -u " + user + " -p " + pass+" shutdown /s";
                    }
        else if(jComboBoxops.getSelectedItem().toString().equalsIgnoreCase("restart")){
            
             psCommand = "C:\\\\Program Files (x86)\\\\PsExec/psexec.exe \\\\"+jComboBoxsys.getSelectedItem().toString() + " -u " + user + " -p " + pass+" shutdown -r";
                    }
        else if(jComboBoxops.getSelectedItem().toString().equalsIgnoreCase("list task")){
            
             psCommand = "C:\\\\Program Files (x86)\\\\PsExec/psexec.exe \\\\"+jComboBoxsys.getSelectedItem().toString() + " -u " + user + " -p " + pass+" tasklist.exe /fo /nh /v";
                    }
        
        Process process=null ;
        try
	{
		
                 
       
        process = java.lang.Runtime.getRuntime().exec(psCommand); 
        
         if(jComboBoxops.getSelectedItem().toString().equalsIgnoreCase("list task")){
             BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
 
            //reads the outputs
            
            String inputLine = in.readLine();
            inputLine = in.readLine();
            inputLine = in.readLine();
            inputLine = in.readLine();
           this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
          //  System.out.println(in.readLine());
          
            while ((inputLine != null)) {
                jTextPaneT.setText(jTextPaneT.getText()+inputLine);
                if (!inputLine.trim().equals("")) {
              // keep only the process name
              //inputLine = inputLine.substring(1);
              //process.add(inputLine.substring(0, inputLine.indexOf("")));
                
                     }
               inputLine = in.readLine();
                }
  this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
         }else{
            Thread.sleep(1000);
         JOptionPane.showMessageDialog(rootPane, "Operation executed successfully"); 
         }
         
        
   }

   
        
	
        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        
                JOptionPane.showMessageDialog(rootPane, process.exitValue());
        this.setTitle("Connectivity Status of System  in "+jComboBoxfloor.getSelectedItem().toString()+" Double Click to remote connect");
        //this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
    }//GEN-LAST:event_jButtonrunActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    
       this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
       subnet="192.168.101.";
        try
	{
		
                 Process process ;
    timeout=10000;
   for (int i=1;i<255;i++){
       //host=subnet + "." + ip[i];
        //hostname=InetAddress.getByName(host).getHostName();
        host=subnet+ i;
        hostname=host;
        
        process = java.lang.Runtime.getRuntime().exec("ping "+host); 
        BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
 
            //reads the outputs
            int x = 1;
            String inputLine = in.readLine();
           
          //  System.out.println(in.readLine());
            while ((inputLine != null)) {
                if (inputLine.length() > 0 && inputLine.contains("TTL")) {
                    jComboBoxsys.addItem(host);
                     //time = inputLine.substring(inputLine.indexOf("time"));
                     x=0;
                     break;  
                     
                }
                else if (inputLine.length() > 0 && inputLine.contains("unreachable")) {
                   
                   
                     x=1;
                     break;  
                     
                }
                inputLine = in.readLine();
                System.out.println(in.readLine()+" "+i);
            }  
         
        if (x == 0) { 
           setGreenIcon(i);
           
            
        } 
        else { 
            setRedIcon(i);
           
        }
       
   }

   
        
	}
        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        this.setTitle("Connectivity Status of System  in "+jComboBoxfloor.getSelectedItem().toString()+" Double Click to remote connect");
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connections.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connections.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connections.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connections.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connections().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton computer1;
    private javax.swing.JButton computer10;
    private javax.swing.JButton computer11;
    private javax.swing.JButton computer12;
    private javax.swing.JButton computer13;
    private javax.swing.JButton computer14;
    private javax.swing.JButton computer15;
    private javax.swing.JButton computer16;
    private javax.swing.JButton computer17;
    private javax.swing.JButton computer18;
    private javax.swing.JButton computer19;
    private javax.swing.JButton computer2;
    private javax.swing.JButton computer20;
    private javax.swing.JButton computer21;
    private javax.swing.JButton computer22;
    private javax.swing.JButton computer23;
    private javax.swing.JButton computer24;
    private javax.swing.JButton computer25;
    private javax.swing.JButton computer26;
    private javax.swing.JButton computer27;
    private javax.swing.JButton computer28;
    private javax.swing.JButton computer29;
    private javax.swing.JButton computer3;
    private javax.swing.JButton computer30;
    private javax.swing.JButton computer31;
    private javax.swing.JButton computer32;
    private javax.swing.JButton computer33;
    private javax.swing.JButton computer34;
    private javax.swing.JButton computer4;
    private javax.swing.JButton computer5;
    private javax.swing.JButton computer6;
    private javax.swing.JButton computer7;
    private javax.swing.JButton computer8;
    private javax.swing.JButton computer9;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonrun;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JComboBox<String> jComboBoxfloor;
    private javax.swing.JComboBox<String> jComboBoxops;
    private javax.swing.JComboBox<String> jComboBoxsys;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPaneT;
    // End of variables declaration//GEN-END:variables
String host, hostname,subnet;
int timeout;
boolean adminlogin=true;
boolean otherlogin=false;
public void setGreenIcon(int i){
    try{
   if (i==0) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer1.setIcon(new ImageIcon(play));
            computer1.setText(hostname);
            computer1.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
                   
           }  
   else if (i==1) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer2.setIcon(new ImageIcon(play));
            computer2.setText(hostname);
            computer2.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           } 
 else if (i==2) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer3.setIcon(new ImageIcon(play));
            computer3.setText(hostname);
            computer3.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
 else if (i==3) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer4.setIcon(new ImageIcon(play));
            computer4.setText(hostname);
            computer4.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
 else if (i==4) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer5.setIcon(new ImageIcon(play));
            computer5.setText(hostname);
            computer5.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
 else if (i==5) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer6.setIcon(new ImageIcon(play));
            computer6.setText(hostname);
            computer6.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
 else if (i==6) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer7.setIcon(new ImageIcon(play));
            computer7.setText(hostname);
            computer7.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
 else if (i==7) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer8.setIcon(new ImageIcon(play));
            computer8.setText(hostname);
            computer8.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
 else if (i==8) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer9.setIcon(new ImageIcon(play));
            computer9.setText(hostname);
            computer9.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
 else if (i==9) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer10.setIcon(new ImageIcon(play));
            computer10.setText(hostname);
            computer10.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
   else if (i==10) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer11.setIcon(new ImageIcon(play));
            computer11.setText(hostname);
            computer11.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
    else if (i==11) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer12.setIcon(new ImageIcon(play));
            computer12.setText(hostname);
            computer12.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
    else if (i==12) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer13.setIcon(new ImageIcon(play));
            computer13.setText(hostname);
            computer13.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
   else if (i==13) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer14.setIcon(new ImageIcon(play));
            computer14.setText(hostname);
            computer14.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
    else if (i==14) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer15.setIcon(new ImageIcon(play));
            computer15.setText(hostname);
            computer15.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
    else if (i==15) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer16.setIcon(new ImageIcon(play));
            computer16.setText(hostname);
            computer16.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
    else if (i==16) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer17.setIcon(new ImageIcon(play));
            computer17.setText(hostname);
            computer17.setVisible(true);
                   this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
   else if (i==17) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer18.setIcon(new ImageIcon(play));
            computer18.setText(hostname);
            computer18.setVisible(true);
            this.setTitle("Connectivity Status of System "+hostname+" Double Click to remote connect");
           }
    else if (i==18) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer19.setIcon(new ImageIcon(play));
            computer19.setText(hostname);
            computer19.setVisible(true);
           }
       else if (i==19) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer20.setIcon(new ImageIcon(play));
            computer20.setText(hostname);
            computer20.setVisible(true);
           }
   else if (i==20) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer21.setIcon(new ImageIcon(play));
            computer21.setText(hostname);
            computer21.setVisible(true);
           }
   else if (i==21) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer22.setIcon(new ImageIcon(play));
            computer22.setText(hostname);
            computer22.setVisible(true);
           }
   else if (i==22) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer23.setIcon(new ImageIcon(play));
            computer23.setText(hostname);
            computer23.setVisible(true);
           }
   else if (i==23) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer24.setIcon(new ImageIcon(play));
            computer24.setText(hostname);
            computer24.setVisible(true);
           }
   else if (i==24) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer25.setIcon(new ImageIcon(play));
            computer25.setText(hostname);
            computer25.setVisible(true);
           }
   else if (i==25) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer26.setIcon(new ImageIcon(play));
            computer26.setText(hostname);
            computer26.setVisible(true);
           }
   else if (i==26) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer27.setIcon(new ImageIcon(play));
            computer27.setText(hostname);
            computer27.setVisible(true);
           }
   else if (i==27) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer28.setIcon(new ImageIcon(play));
            computer28.setText(hostname);
            computer28.setVisible(true);
           }
   else if (i==28) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer29.setIcon(new ImageIcon(play));
            computer29.setText(hostname);
            computer29.setVisible(true);
           }
   else if (i==29) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer30.setIcon(new ImageIcon(play));
            computer30.setText(hostname);
            computer30.setVisible(true);
           }
   else if (i==30) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer31.setIcon(new ImageIcon(play));
            computer31.setText(hostname);
            computer31.setVisible(true);
           }
   else if (i==31) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer32.setIcon(new ImageIcon(play));
            computer32.setText(hostname);
            computer32.setVisible(true);
           }
   else if (i==32) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer33.setIcon(new ImageIcon(play));
            computer33.setText(hostname);
            computer33.setVisible(true);
           }
   else if (i==33) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/green.png"));
        
            computer34.setIcon(new ImageIcon(play));
            computer34.setText(hostname);
            computer34.setVisible(true);
           }
     
   
    }
    catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
    
}

public void setRedIcon(int i){
   try{
       if (i==0) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer1.setIcon(new ImageIcon(play));
            computer1.setText(hostname);
            computer1.setVisible(true);
           }
       else if (i==1) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer2.setIcon(new ImageIcon(play));
            computer2.setText(hostname);
            computer2.setVisible(true);
           } 
 else if (i==2) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer3.setIcon(new ImageIcon(play));
            computer3.setText(hostname);
            computer3.setVisible(true);
           }
 else if (i==3) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer4.setIcon(new ImageIcon(play));
            computer4.setText(hostname);
            computer4.setVisible(true);
           }
 else if (i==4) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer5.setIcon(new ImageIcon(play));
            computer5.setText(hostname);
            computer5.setVisible(true);
           }
 else if (i==5) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer6.setIcon(new ImageIcon(play));
            computer6.setText(hostname);
            computer6.setVisible(true);
           }
 else if (i==6) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer7.setIcon(new ImageIcon(play));
            computer7.setText(hostname);
            computer7.setVisible(true);
           }
 else if (i==7) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer8.setIcon(new ImageIcon(play));
            computer8.setText(hostname);
            computer8.setVisible(true);
           }
 else if (i==8) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer9.setIcon(new ImageIcon(play));
            computer9.setText(hostname);
            computer9.setVisible(true);
           }
 else if (i==9) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer10.setIcon(new ImageIcon(play));
            computer10.setText(hostname);
            computer10.setVisible(true);
           }
       else if (i==10) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer11.setIcon(new ImageIcon(play));
            computer11.setText(hostname);
            computer11.setVisible(true);
           }
       else if (i==11) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer12.setIcon(new ImageIcon(play));
            computer12.setText(hostname);
            computer12.setVisible(true);
           }
       else if (i==12) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer13.setIcon(new ImageIcon(play));
            computer13.setText(hostname);
            computer13.setVisible(true);
           }
       else if (i==13) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer14.setIcon(new ImageIcon(play));
            computer14.setText(hostname);
            computer14.setVisible(true);
           }
       else if (i==14) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer15.setIcon(new ImageIcon(play));
            computer15.setText(hostname);
            computer15.setVisible(true);
           }
       else if (i==15) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer16.setIcon(new ImageIcon(play));
            computer16.setText(hostname);
            computer16.setVisible(true);
           }
       else if (i==16) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer17.setIcon(new ImageIcon(play));
            computer17.setText(hostname);
            computer17.setVisible(true);
           }
       else if (i==17) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer18.setIcon(new ImageIcon(play));
            computer18.setText(hostname);
            computer18.setVisible(true);
           }
       else if (i==18) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer19.setIcon(new ImageIcon(play));
            computer19.setText(hostname);
            computer19.setVisible(true);
           }
       else if (i==19) {  Image play = ImageIO.read(getClass().getResource("/omfbreports/Resource/red.png"));
        
            computer20.setIcon(new ImageIcon(play));
            computer20.setText(hostname);
            computer20.setVisible(true);
           }
    }
    catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}   
             }

public void reset(){
jComboBoxsys.removeAllItems();
computer1.setVisible(false);
computer2.setVisible(false);
computer3.setVisible(false);
computer4.setVisible(false);
computer5.setVisible(false);
computer6.setVisible(false);
computer7.setVisible(false);
computer8.setVisible(false);
computer9.setVisible(false);
computer10.setVisible(false);
computer11.setVisible(false);
computer12.setVisible(false);
computer13.setVisible(false);
computer14.setVisible(false);
computer15.setVisible(false);
computer16.setVisible(false);
computer17.setVisible(false);
computer18.setVisible(false);
computer19.setVisible(false);
computer19.setVisible(false);
computer20.setVisible(false);
computer21.setVisible(false);
computer22.setVisible(false);
computer23.setVisible(false);
computer24.setVisible(false);
computer25.setVisible(false);
computer26.setVisible(false);
computer27.setVisible(false);
computer28.setVisible(false);
computer29.setVisible(false);
computer30.setVisible(false);
computer31.setVisible(false);
computer32.setVisible(false);
computer33.setVisible(false);
computer34.setVisible(false);


}
public void getDetail(String IP){
    String internetstatus="";
   String name="";
    // another method
          try{
               this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                name=getHostName(IP);
            
          }
          catch(Exception e){ internetstatus="Not Connected to Internet"; }
          JOptionPane.showMessageDialog(rootPane, "System Name: "+name+"\n"+"Internet Status: "+internetstatus+"\n");
           this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}
public String getHostName(String IP){
    String savedname="Unknown";
    if(IP.equalsIgnoreCase("192.168.101.1")){savedname="Network Router";}
    else if(IP.equalsIgnoreCase("192.168.101.2")){savedname="OhafiaMainServer";}
    else if(IP.equalsIgnoreCase("192.168.101.3")){savedname="NIPServer";}
    else if(IP.equalsIgnoreCase("192.168.101.7")){savedname="Wireless Access Point";}
    else if(IP.equalsIgnoreCase("192.168.101.9")){savedname="Credit Bureua Server";}
    else if(IP.equalsIgnoreCase("192.168.101.10")){savedname="Rose System";}
    else if(IP.equalsIgnoreCase("192.168.101.11")){savedname="PIN-PC";}
    else if(IP.equalsIgnoreCase("192.168.101.12")){savedname="Cashier3-PC(Oga TOM)";}
    else if(IP.equalsIgnoreCase("192.168.101.14")){savedname="Elizabeth";}
    else if(IP.equalsIgnoreCase("192.168.101.15")){savedname="NNENNA-PC";}
    else if(IP.equalsIgnoreCase("192.168.101.19")){savedname="EBERE PC";}
    else if(IP.equalsIgnoreCase("192.168.101.21")){savedname="Operation Manager";}
    else if(IP.equalsIgnoreCase("192.168.101.54")){savedname="CHINEDU PC";}
    else if(IP.equalsIgnoreCase("192.168.101.45")){savedname="IT RISK SYSTEM";}
    else if(IP.equalsIgnoreCase("192.168.101.59")){savedname="Comfort System";}
    else if(IP.equalsIgnoreCase("192.168.101.80")){savedname="IT Credit PC";}
    else if(IP.equalsIgnoreCase("192.168.101.89")){savedname="EBI KALU";}
    else if(IP.equalsIgnoreCase("192.168.101.99")){savedname="Managing Director";}
    else if(IP.equalsIgnoreCase("192.168.101.123")){savedname="Marketer System(IJeoma)";}
    else if(IP.equalsIgnoreCase("192.168.101.131")){savedname="Credit Manager";}
    else if(IP.equalsIgnoreCase("192.168.101.101")){savedname="Chidinma Teller1-PC";}
    else if(IP.equalsIgnoreCase("192.168.101.104")){savedname="Teller3";}
    else if(IP.equalsIgnoreCase("192.168.101.105")){savedname="Financial Controller";}
    else if(IP.equalsIgnoreCase("192.168.101.107")){savedname="Secretary";}
     else if(IP.equalsIgnoreCase("192.168.101.116")){savedname="Auditor Mabel PC";}
    else if(IP.equalsIgnoreCase("192.168.101.122")){savedname="IT Credit2-PC";}
    else if(IP.equalsIgnoreCase("192.168.101.123")){savedname="Rock-PC";}
    else if(IP.equalsIgnoreCase("192.168.101.155")){savedname="BVN Machine System";}
     else if(IP.equalsIgnoreCase("192.168.101.177")){savedname="UKPAI SYSTEM";}
    else if(IP.equalsIgnoreCase("192.168.101.188")){savedname="OMFBICT";}
     else if(IP.equalsIgnoreCase("192.168.101.198")){savedname="AUDIT-IT-PC";}
    else if(IP.equalsIgnoreCase("192.168.101.202")){savedname="FileServer";}
    return savedname;
                    }




public void remoteConnect(String sysname){
    
String internetstatus;
        try
	{
		//String hostname,subnet="192.168.101"; // the network address e.g 192.168.1
    //timeout=10000000;
   //for (int i=0;i<ip.length;i++){
       //host=subnet + "." + i;
            String user="Administrator",pass="Admin123Server";
            if(adminlogin==false){
         
   String inputUser=JOptionPane.showInputDialog(rootPane, "Enter User");
   String inputPass=JOptionPane.showInputDialog(rootPane, "Enter password");
                  if(!inputUser.equalsIgnoreCase("")){
                       user=inputUser;
                       pass=inputPass;
                  } else{
       
                   user="";
                   pass="";
                     }
                   }
   // creating credentials
Process p = Runtime.getRuntime().exec("cmdkey /generic:TERMSRV/"+sysname+" /user: "+user+" /pass:"+pass);
//p.destroy();

//Runtime.getRuntime().exec("mstsc /v: "+ip1+" /f /console");
Runtime.getRuntime().exec("mstsc.exe /v: "+sysname+" /w:800 /h:600");

  //Thread.sleep(2*60*1000); // min sec millisec
// deleting credentials
//Process p1 = Runtime.getRuntime().exec("cmdkey /delete:"+ip1);
//p1.destroy();
   
            internetstatus="Connected"; 
            if (internetstatus.equalsIgnoreCase("Connected")) { 
           setGreenIcon(1);
           
            
        } 
        else { 
            setRedIcon(1);
           
        }
       
   //}

   
        
	}
        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}

}


}
